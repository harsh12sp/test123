{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apimServiceName": {
            "type": "string"
        },
        "apimApi": {
            "type": "string"
        },
        "apimBackendName": {
            "type": "string"
        },
        "functionAppName": {
            "type": "string"
        },
        "functionHostKey": {
            "type": "securestring"
        },
        "functionAppUri": {
            "type": "string"
        },
        "functionAppResourceGroup": {
            "type": "string"
        },
        "deployToApiManagement": {
            "type": "string"
        }
    },
    "variables": {
        "functionAppResourceId": "[resourceId(parameters('functionAppResourceGroup'),'Microsoft.Web/sites', parameters('functionAppName'))]",
        "deployToApiManagement": "[parameters('deployToApiManagement')]"
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2022-08-01",
            "name": "[concat(parameters('apimServiceName'), '/',parameters('apimApi'))]",
            "properties": {
                "displayName": "[parameters('apimApi')]",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "path": "[parameters('apimApi')]",
                "protocols": [
                    "https"
                ]
            }
        },
        {
            "condition": "[equals(variables('deployToApiManagement'), 'true')]",
            "type": "Microsoft.ApiManagement/service/backends",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimServiceName'), '/', parameters('apimBackendName'))]",
            "properties": {
                "url": "[parameters('functionAppUri')]",
                "protocol": "http",
                "resourceId": "[concat('https://management.azure.com', variables('functionAppResourceId'))]",
                "credentials": {
                    "header": {
                        "x-functions-key": [
                            "{{loyalty-function-key}}"
                        ]
                    }
                }
            }
        },
        {
            "condition": "[equals(variables('deployToApiManagement'), 'true')]",
            "type": "Microsoft.ApiManagement/service/properties",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimServiceName'), '/loyalty-function-key')]",
            "properties": {
                "displayName": "loyalty-function-key",
                "value": "[parameters('functionHostKey')]",
                "tags": [
                    "key",
                    "function",
                    "auto"
                ],
                "secret": true
            }
        },
        {
            "condition": "[equals(variables('deployToApiManagement'), 'true')]",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimServiceName'), '/', parameters('apimApi'), '/post-customerloyalty')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('apimApi'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), parameters('apimApi'),'createcustomerloyaltypost')]"
            ],
            "properties": {
                "displayName": "CreateCustomerloyalty",
                "method": "POST",
                "urlTemplate": "/customerloyalty",
                "templateParameters": [],
                "request": {
                    "queryParameters": [
                        {
                            "name": "version",
                            "type": "string",
                            "defaultValue": "v1.0",
                            "required": true,
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "sample": "{\"bmc_id\":\"G6000000092\",\"retailer_id\":\"10003046\",\"loyalty_email_id\":\"contractor@wePaintForYou.com\",\"business_name\":\"We Paint For You ®\",\"business_email_id\":\"contractor@wepaintforyou.com\",\"business_phone_number\":\"5551234567\",\"business_type\":\"authorized seller\",\"address_line1\":\"100 Sample Rd.\",\"address_line2\":\"#Suite 202.\",\"city\":\"Suffern\",\"state_code\":\"NY\",\"zipcode\":\"12345\",\"contact_first_name\":\"John.\",\"contact_last_name\":\"Doe.\",\"contact_email_id\":\"john.doe@wepaintforyou.com\",\"contact_phone_number\":\"2012349865\",\"segment_code\":\"TRDCPAINT\",\"language_code\":\"EN\"}",
                            "schemaId": "createcustomerloyaltypost"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Successful Operation",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "sample": "{\"status\":\"OK\",{\"data\":{\"bmc_id\":\"G6000000092\",\"loyalty_indicator\":\"Y\"},\"info\":{\"last_updated\":\"null\",\"response_time\":\"400.3672ms\"}}}"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('apimServiceName'), '/', parameters('apimApi'), '/createcustomerloyaltypost')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('apimApi'))]"
            ],
            "properties": {
                "contentType": "application/json",
                "document": {
                    "value": "{\"bmc_id\":\"G6000000092\",\"retailer_id\":\"10003046\",\"loyalty_email_id\":\"contractor@wePaintForYou.com\",\"business_name\":\"We Paint For You ®\",\"business_email_id\":\"contractor@wepaintforyou.com\",\"business_phone_number\":\"5551234567\",\"business_type\":\"authorized seller\",\"address_line1\":\"100 Sample Rd.\",\"address_line2\":\"#Suite 202.\",\"city\":\"Suffern\",\"state_code\":\"NY\",\"zipcode\":\"12345\",\"contact_first_name\":\"John.\",\"contact_last_name\":\"Doe.\",\"contact_email_id\":\"john.doe@wepaintforyou.com\",\"contact_phone_number\":\"2012349865\",\"segment_code\":\"TRDCPAINT\",\"language_code\":\"EN\"}"
                }
            }
        },
        {
            "condition": "[equals(variables('deployToApiManagement'), 'true')]",
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimServiceName'), '/', parameters('apimApi'), '/post-customerloyalty/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), parameters('apimApi'), 'post-customerloyalty')]"
            ],
            "properties": {
                "value": "[concat('<policies>\r\n  <inbound>\r\n    <choose>\r\n      <when condition=\"@(context.Request.Url.Query.GetValueOrDefault(&quot;version&quot;) == &quot;v1.0&quot;)\">\r\n        <set-backend-service id=\"apim-generated-policy\" backend-id=\"', parameters('apimBackendName'), '\" />\r\n        <!--<authentication-managed-identity resource=\"', parameters('functionAppUri'), '\" ignore-error=\"false\" />-->\r\n        <rewrite-uri template=\"/customerloyalty\" copy-unmatched-params=\"false\" />\r\n      </when>\r\n      <otherwise>\r\n        <set-backend-service id=\"apim-generated-policy\" backend-id=\"', parameters('apimBackendName'), '\" />\r\n        <!--<authentication-managed-identity resource=\"', parameters('functionAppUri'), '\" ignore-error=\"false\" />-->\r\n        <rewrite-uri template=\"/customerloyalty\" copy-unmatched-params=\"false\" />\r\n      </otherwise>\r\n    </choose>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>')]",
                "format": "xml"
            }
        },
        {
            "condition": "[equals(variables('deployToApiManagement'), 'true')]",
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimServiceName'), '/', parameters('apimApi'), '/policy')]",
            "properties": {
                "value": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <cors>\r\n            <allowed-origins>\r\n                <origin>*</origin>\r\n            </allowed-origins>\r\n            <allowed-methods>\r\n                <method>GET</method>\r\n                <method>POST</method>\r\n                <method>PUT</method>\r\n                <method>DELETE</method>\r\n                <method>HEAD</method>\r\n                <method>OPTIONS</method>\r\n                <method>PATCH</method>\r\n                <method>TRACE</method>\r\n            </allowed-methods>\r\n            <allowed-headers>\r\n                <header>*</header>\r\n            </allowed-headers>\r\n            <expose-headers>\r\n                <header>*</header>\r\n            </expose-headers>\r\n        </cors>\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <set-header name=\"Content-Type\" exists-action=\"override\">\r\n            <value>application/json</value>\r\n        </set-header>\r\n        <base />    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
                "format": "xml"
            }
        }
    ]
}